// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id   Int    @id @default(autoincrement())
  email String @unique
  password  String
  roles UsersRoles[]
  task        Task[]
  project     Project[]
  progress    Progress[]
}

model Roles {
  id   Int    @id @default(autoincrement())
  value String 
  description  String
  users UsersRoles[] 
}

model UsersRoles {
  user   Users @relation(fields: [userId], references: [id])
  userId Int 
  role   Roles @relation(fields: [roleId], references: [id])
  roleId Int  

  @@id([userId, roleId])
}

model Task {
  id           Int       @id @default(autoincrement())
  user         Users      @relation(fields: [userId], references: [id])    
  userId       Int
  progress     Progress  @relation(fields: [progressId], references: [id])
  progressId   Int
  name         String
  text         String
  date         DateTime  @default(now())
}

model Progress {
  id        Int      @id @default(autoincrement())
  name      String
  projectId Int
  project   Project  @relation(fields: [projectId], references: [id])
  user      Users    @relation(fields: [userId], references: [id])
  userId    Int
  task      Task[]
}

model Project {
  id       Int        @id @default(autoincrement())
  name     String
  userId   Int
  user     Users       @relation(fields: [userId], references: [id])
  progress Progress[]
}